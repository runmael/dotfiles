import XMonad
import XMonad.Hooks.DynamicLog
import XMonad.Hooks.ManageDocks
import XMonad.Util.Run(spawnPipe)
import XMonad.Util.EZConfig(additionalKeys)
import XMonad.Util.EZConfig
import XMonad.Layout.NoBorders
import XMonad.Util.NamedScratchpad
import XMonad.Layout.Spacing
import System.IO
import XMonad.Hooks.FadeInactive

myManageHook = composeAll
    [ --className =? "Claws-mail" --> doShift "6:mail"
      title =? "ncmpcpp" --> doShift "8:music"
    , title =? "vifm" --> doShift "5:vifm"
    , className =? "Thunderbird" --> doShift "7:mail"
    , className =? "Pidgin" --> doShift "6:pidgin"
    , manageDocks
    ]

startup :: X ()
startup = do
    --spawn "claws-mail"
    spawn "urxvt -e ncmpcpp"
    spawn "urxvt -e vifm"
    spawn "thunderbird"


-- myLayoutHook = spacing 2 $ layoutHookdefaultConfig

myXmonadBar = "dzen2 -x '1440' -y '0' -h '24' -w '640' -ta 'l' -fg '#FFFFFF' -bg '#1B1D1E'"
myStatusBar = "conky -c /home/my_user/.xmonad/.conky_dzen | dzen2 -x '2080' -w '1040' -h '24' -ta 'r' -bg '#1B1D1E' -fg '#FFFFFF' -y '0'"

main = do
    dzenLeftBar <- spawnPipe myXmonadBar
    dzenRightBar <- spawnPipe myStatusBar
    --xmproc <- spawnPipe "/usr/bin/xmobar /home/petar/.xmobarrc"
    xmonad $ defaultConfig
        { terminal = myTerminal
        , workspaces = myWorkspaces
        , startupHook = startup
        , normalBorderColor = myNormalBorderColor
        , focusedBorderColor = myFocusedBorderColor
        , manageHook = myManageHook <+> manageHook defaultConfig
        , layoutHook = avoidStruts $ smartBorders $ spacing 2 $ layoutHook defaultConfig
        , logHook             = myLogHook dzenLeftBar >> fadeInactiveLogHook 0xdddddddd

        --, modMask = mod4Mask     -- Rebind Mod to the Windows key
        } 

myTerminal = "urxvt"
myWorkspaces = ["1:misc", "2:dev", "3:www", "4:docs", "5:vifm", "6:pidgin", "7:mail", "8:music", "9:other"]
--myNormalBorderColor = "#004444"
--myNormalBorderColor = "#002244"
myNormalBorderColor = "#334444"
--myFocusedBorderColor = "#007711"
--myFocusedBorderColor = "#339900"
--myFocusedBorderColor = "#11ff00"
--myFocusedBorderColor = "#118800"
myFocusedBorderColor = "#dd7700"

myBitmapsDir = "/home/petar/.xmonad/dzen2"
myLogHook :: Handle -> X ()
myLogHook h = dynamicLogWithPP $ defaultPP
    { ppCurrent           =   dzenColor "#ebac54" "#1B1D1E" . pad
    , ppVisible           =   dzenColor "white" "#1B1D1E" . pad
    , ppHidden            =   dzenColor "white" "#1B1D1E" . pad
    , ppHiddenNoWindows   =   dzenColor "#7b7b7b" "#1B1D1E" . pad
    , ppUrgent            =   dzenColor "#ff0000" "#1B1D1E" . pad
    , ppWsSep             =   " "
    , ppSep               =   "  |  "
    , ppLayout            =   dzenColor "#ebac54" "#1B1D1E" .  
                                    (\x -> case x of
                                        "ResizableTall"             ->      "^i(" ++ myBitmapsDir ++ "/tall.xbm)"
                                        "Mirror ResizableTall"      ->      "^i(" ++ myBitmapsDir ++ "/mtall.xbm)"
                                        "Full"                      ->      "^i(" ++ myBitmapsDir ++ "/full.xbm)"
                                        "Simple Float"              ->      "~"
                                        _                           ->      x
                                    )
    , ppTitle             =   (" " ++) . dzenColor "white" "#1B1D1E" . dzenEscape
    , ppOutput            =   hPutStrLn h
    }
        
